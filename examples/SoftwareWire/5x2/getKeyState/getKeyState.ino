// ДАННЫЙ ПРИМЕР РЕАГИРУЕТ НА НАЖАТИЕ КЛАВИШ КЛАВИАТУРЫ:            // * Строки со звёздочкой являются необязательными.
// (нажимайте кнопки клавиатуры)                                    //
                                                                    //
// Требуется установить библиотеку <iarduino_I2C_Software.h>        //   https://iarduino.ru/file/627.html
                                                                    //
// Клавиатура 4x2, FLASH-I2C:                                       //   https://iarduino.ru/shop/Expansion-payments/klaviatura-4x2-i2c-flash.html
// Клавиатура 5x2, FLASH-I2C:                                       //   https://iarduino.ru/shop/Expansion-payments/klaviatura-5x2-i2c-flash.html
// Информация о подключении модулей к шине I2C:                     //   https://wiki.iarduino.ru/page/i2c_connection/
// Информация о модуле и описание библиотеки:                       //   https://wiki.iarduino.ru/page/keyboard-i2c-flash/
                                                                    //
#include <iarduino_I2C_Software.h>                                  //   Подключаем библиотеку для работы с программной шиной I2C, до подключения библиотеки iarduino_I2C_Keyboard.
SoftTwoWire sWire(3,4);                                             //   Создаём объект программной шины I2C указав выводы которым будет назначена роль линий: SDA, SCL.
                                                                    //
#include <iarduino_I2C_Keyboard.h>                                  //   Подключаем библиотеку для работы с клавиатурой I2C-flash.
iarduino_I2C_Keyboard kbd(0x09,5,2);                                //   Объявляем объект kbd для работы с функциями и методами библиотеки iarduino_I2C_Keyboard, указывая адрес модуля на шине I2C, количество кнопок в линии, количество линий с кнопками.
                                                                    //   Если объявить объект без указания адреса (iarduino_I2C_Keyboard kbd(false,5,2);), то адрес будет найден автоматически.
void setup(){                                                       //
    delay(500);                                                     // * Ждём завершение переходных процессов связанных с подачей питания.
    Serial.begin(9600);                                             //   Инициируем передачу данных по шине UART на скорости 9600 бит/сек.
    while(!Serial){;}                                               // * Ждём завершения инициализации шины UART.
    kbd.begin(&sWire);                                              //   Инициируем работу с клавиатурой, указав ссылку на объект для работы с шиной I2C на которой находится клавиатура (по умолчанию &Wire).
    kbd.setEncoding(5,1,'f');                                       // * Присваиваем 5 кнопке в 1 ряду символ 'f'.
}                                                                   //   (по умолчанию кнопкам присвоены символы "1234567890").
                                                                    //
void loop(){                                                        //
//  Выполняем действия по событию нажатия клавиши:                  //
    if(kbd.getKey(1,1,KEY_PUSHED  )){Serial.println("открыть"   );} //   Если 1 кнопка в 1 ряду нажимается, то выводим сообщение "открыть".
    if(kbd.getKey(2,1,KEY_PUSHED  )){Serial.println("включить"  );} //   Если 2 кнопка в 1 ряду нажимается, то выводим сообщение "включить".
    if(kbd.getKey(3,1,KEY_PUSHED  )){Serial.println("начать"    );} //   Если 3 кнопка в 1 ряду нажимается, то выводим сообщение "начать".
    if(kbd.getKey(4,1,KEY_PUSHED  )){Serial.println("вперёд"    );} //   Если 4 кнопка в 1 ряду нажимается, то выводим сообщение "вперёд".
    if(kbd.getKey('f',KEY_PUSHED  )){Serial.println("влево"     );} //   Так как функцией setEncoding(), в коде Setup(), 5 кнопке 1 ряда был присвоен символ 'f', то обращаться к этой кнопке можно либо по номеру и ряду, либо по привоенному ей символу.
    if(kbd.getKey(1,2,KEY_PUSHED  )){Serial.println("закрыть"   );} //   Если 1 кнопка в 2 ряду нажимается, то выводим сообщение "закрыть".
    if(kbd.getKey(2,2,KEY_PUSHED  )){Serial.println("выключить" );} //   Если 2 кнопка в 2 ряду нажимается, то выводим сообщение "выключить".
    if(kbd.getKey(3,2,KEY_RELEASED)){Serial.println("остановить");} //   Эта строка кода реагирует не на нажатие 3 кнопки 2 ряда, а на её отпускание.
    if(kbd.getKey(4,2,KEY_PUSHED  )){Serial.println("назад"     );} //   Если 4 кнопка в 2 ряду нажимается, то выводим сообщение "назад".
    if(kbd.getKey(5,2,KEY_PUSHED  )){Serial.println("вправо"    );} //   Если 5 кнопка в 2 ряду нажимается, то выводим сообщение "вправо".
}                                                                   //
                                                                    //
//  ПРИМЕЧАНИЕ:                                                     //
//  Данный пример реагирует на событие «нажатие» клавиш.            //
//  Если изменить тип получаемого события KEY_PUSHED на             //
//  KEY_RELEASED, то пример будет реагировать не на «нажатие», а    //
//  на «отпускание» клавиш (как это реализовано с 3 кнопкой 2 ряда).//
//  Есть еще несколько типов получаемых событий:                    //
//  KEY_CHANGED - реагировать и на «нажатие», и на «отпускание».    //
//  KEY_STATE   - вернуть состояние кнопки (1-нажата, 0-отпущена).  //
//  KEY_TRIGGER - вернуть состояние переключателя кнопки.           //
//  KEY_HOLD_05 - вернуть дискретное время удержания кнопки.        //
//                время возвращается числом полусекунд от 0 до 7.   //
//                время в секундах = полученное число * 0,5 сек.    //
//  Вместо номера кнопки в ряду и номера ряда, можно указать символ //
//  ранее присвоенный кнопке. По умолчанию кнопкам присвоены символы//
//  "12345" (для кнопок 1 ряда) и "67890" (для кнопок 2 ряда).      //
//  Если вместо символа кнопки указать KEY_ALL, то функция вернёт   //
//  число, каждый бит которого отвечает за состояние своей кнопки,  //
//  см. пример getAllKeyState.                                      //